<?xml version="1.0" encoding="UTF-8" ?> 

<SmartSqlMap Scope="org.activiti.engine.impl.persistence.entity.DeploymentEntityImpl"  xmlns="http://SmartSql.net/schemas/SmartSqlMap.xsd">

  <!-- DEPLOYMENT RESULTMAP -->
  
  <ResultMap Id="deploymentResultMap" ResultType="org.activiti.engine.impl.persistence.entity.DeploymentEntityImpl,Sys.Bpm.Engine">
    <Result Property="id" Column="ID_" />
    <Result Property="name" Column="NAME_" />
    <Result Property="category" Column="CATEGORY_" />
    <Result Property="tenantId" Column="TENANT_ID_" />
    <Result Property="deploymentTime" Column="DEPLOY_TIME_"/>
  </ResultMap>
  
  <!-- DEPLOYMENT INSERT -->
    
  <Insert Id="insertDeployment">
    insert into ACT_RE_DEPLOYMENT(ID_, NAME_, CATEGORY_, TENANT_ID_, DEPLOY_TIME_)
    values(@id, @name, @category, @tenantId, @deploymentTime)
  </Insert>

  <Insert Id="bulkInsertDeployment">
    insert into ACT_RE_DEPLOYMENT(ID_, NAME_, CATEGORY_, TENANT_ID_, DEPLOY_TIME_)
    values
      <For  Prepend="" Key="p" Open="" Close="" Property="Items" Separator=",">
        (@id,
         @name,
         @category,
         @tenantId,
         @deploymentTime)
      </For>
  </Insert>

  <!-- DEPLOYMENT UPDATE -->
  
  <Update Id="updateDeployment">
    update ACT_RE_DEPLOYMENT set
      CATEGORY_ = @category,
      TENANT_ID_ = @tenantId
    where ID_ = @id
  </Update>
  
  <!-- DEPLOYMENT DELETE -->
  
  <Delete Id="deleteDeployment">
    delete from ACT_RE_DEPLOYMENT where ID_ = @id
  </Delete>

  <!-- DEPLOYMENT SELECT -->
  
  <Statement Id="selectDeploymentsByQueryCriteriaSql">  
    from ACT_RE_DEPLOYMENT RES
    <IsTrue Property="processDefinitionKey != null or processDefinitionKeyLike != null">
    	inner join ACT_RE_PROCDEF PROCDEF on RES.ID_ = PROCDEF.DEPLOYMENT_ID_
    </IsTrue>
    <Where>
      <IsTrue Property="deploymentId != null">
        RES.ID_ = @deploymentId
      </IsTrue>
      <IsTrue Property="name != null">
        and RES.NAME_ = @name
      </IsTrue>
      <IsTrue Property="nameLike != null">
        and RES.NAME_ like @nameLike
      </IsTrue>
      <IsTrue Property="category != null">
        and RES.CATEGORY_ = @category
      </IsTrue>
      <IsTrue Property="categoryNotEquals != null">
        and ( RES.CATEGORY_ &lt;&gt; @categoryNotEquals OR RES.CATEGORY_ is null )  
      </IsTrue>
      <IsTrue Property="tenantId != null">
        and RES.TENANT_ID_ = @tenantId
      </IsTrue>
      <IsTrue Property="tenantIdLike != null">
        and RES.TENANT_ID_ like @tenantIdLike
      </IsTrue>
      <IsTrue Property="withoutTenantId">
        and (RES.TENANT_ID_ = '' or RES.TENANT_ID_ is null)
      </IsTrue>
      <IsTrue Property="processDefinitionKey != null">
        and PROCDEF.KEY_ = @processDefinitionKey
      </IsTrue>
      <IsTrue Property="processDefinitionKeyLike != null">
        and PROCDEF.KEY_ like @processDefinitionKeyLike
      </IsTrue>
    </Where>
  </Statement>
  
  <Select Id="selectDeployment" ResultMap="deploymentResultMap">
    select * from ACT_RE_DEPLOYMENT where ID_ = @id
  </Select>

  <Select Id="selectDeploymentsByQueryCriteria" ResultMap="deploymentResultMap">
    select distinct RES.* 
    <Include RefId="selectDeploymentsByQueryCriteriaSql"/>
  </Select>

  <Select Id="selectDeploymentCountByQueryCriteria">
    select count(distinct RES.ID_)
    <Include RefId="selectDeploymentsByQueryCriteriaSql"/>
  </Select>
    
  <Select Id="selectDeploymentsByName" ResultMap="deploymentResultMap">
    select * from ACT_RE_DEPLOYMENT D where NAME_=@deploymentName order by D.DEPLOY_TIME_ desc
  </Select>
  
  <Select Id="selectDeploymentById" ResultMap="deploymentResultMap">
    select * from ACT_RE_DEPLOYMENT where ID_ = @id
  </Select>

  <!-- mysql specific -->
  <Select Id="selectDeploymentsByQueryCriteria_mysql" ResultMap="deploymentResultMap">
  	${limitBefore}
    select distinct RES.* ${limitBetween}
    <Include RefId="selectDeploymentsByQueryCriteriaSql"/>
   	${orderBy}
    ${limitAfter}
  </Select>

  <Select Id="selectDeploymentByNativeQuery" ResultMap="deploymentResultMap">
    <IsTrue Property="resultType == 'LIST_PAGE'">
      ${limitBefore}
    </IsTrue>
    ${sql}
    <IsTrue Property="resultType == 'LIST_PAGE'">
      ${limitAfter}
    </IsTrue>
  </Select>

  <Select Id="selectDeploymentByNativeQuery_mssql_or_db2" ResultMap="deploymentResultMap">
    <IsTrue Property="resultType == 'LIST_PAGE'">
      ${limitBeforeNativeQuery}
    </IsTrue>
    ${sql}
    <IsTrue Property="resultType == 'LIST_PAGE'">
      ${limitAfter}
    </IsTrue>
  </Select>

  <Select Id="selectDeploymentCountByNativeQuery">
    ${sql}
  </Select>
</SmartSqlMap>